@{
    ViewData["Title"] = "Shopping Cart";
}

<div class="container">
    <h1 class="mb-4">Shopping Cart</h1>

    <div id="message" class="alert alert-info" style="display: none;"></div>

    <div id="cart-content">
    </div>
</div>

<script>
let cart = [];

document.addEventListener('DOMContentLoaded', function() {
    loadCartFromStorage();
    displayCart();
});

function loadCartFromStorage() {
    const savedCart = localStorage.getItem('shoppingCart');
    if (savedCart) {
        cart = JSON.parse(savedCart);
    }
}

function saveCartToStorage() {
    localStorage.setItem('shoppingCart', JSON.stringify(cart));
}

function displayCart() {
    const cartContent = document.getElementById('cart-content');
    
    if (cart.length === 0) {
        cartContent.innerHTML = `
            <div class="alert alert-info">
                <h4 class="alert-heading">Your cart is empty!</h4>
                <p>Looks like you haven't added any products to your cart yet.</p>
                <hr>
                <a href="@Url.Action("Index", "Product")" class="btn btn-primary">Browse Products</a>
            </div>
        `;
        return;
    }
    
    let total = 0;
    let cartHtml = `
        <div class="table-responsive">
            <table class="table table-striped">
                <thead class="table-dark">
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
    `;
    
    cart.forEach(item => {
        const itemTotal = item.price * item.quantity;
        total += itemTotal;
        
        cartHtml += `
            <tr>
                <td>
                    <strong>${item.productName}</strong>
                </td>
                <td>${item.price.toFixed(2)}kr</td>
                <td>
                    <div class="d-flex align-items-center">
                        <input type="number" 
                               value="${item.quantity}" 
                               min="1" 
                               max="99" 
                               class="form-control me-2" 
                               style="width: 80px;"
                               onchange="updateQuantity(${item.productId}, this.value)" />
                    </div>
                </td>
                <td class="text-success fw-bold">${itemTotal.toFixed(2)}kr</td>
                <td>
                    <button class="btn btn-danger btn-sm" onclick="removeFromCart(${item.productId})">
                        Remove
                    </button>
                </td>
            </tr>
        `;
    });
    
    cartHtml += `
                </tbody>
                <tfoot>
                    <tr class="table-info">
                        <td colspan="3"><strong>Total:</strong></td>
                        <td><strong>${total.toFixed(2)}kr</strong></td>
                        <td></td>
                    </tr>
                </tfoot>
            </table>
        </div>
        
        <div class="d-flex justify-content-between mt-4">
            <a href="@Url.Action("Index", "Product")" class="btn btn-secondary">Continue Shopping</a>
            <button class="btn btn-success" onclick="checkout()">Checkout</button>
        </div>
    `;
    
    cartContent.innerHTML = cartHtml;
}

function updateQuantity(productId, newQuantity) {
    const quantity = parseInt(newQuantity);
    if (quantity <= 0) {
        removeFromCart(productId);
        return;
    }
    
    const item = cart.find(item => item.productId === productId);
    if (item) {
        item.quantity = quantity;
        saveCartToStorage();
        displayCart();
    }
}

function removeFromCart(productId) {
    cart = cart.filter(item => item.productId !== productId);
    saveCartToStorage();
    displayCart();
}

async function checkout() {
    if (cart.length === 0) {
        showMessage('Your cart is empty', 'warning');
        return;
    }
    
    try {
        const orderData = {
            userId: 1,
            items: cart.map(item => ({
                productId: item.productId,
                price: item.price,
                quantity: item.quantity
            }))
        };
        
        const response = await fetch('/api/order/create', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(orderData)
        });
        
        const result = await response.json();
        
        if (response.ok) {
            showMessage(`Order #${result.Id} created successfully!`, 'success');
            cart = [];
            saveCartToStorage();
            displayCart();
        } else {
            showMessage(`Error: ${result.message}`, 'danger');
        }
    } catch (error) {
        showMessage('Error creating order. Please try again.', 'danger');
        console.error('Checkout error:', error);
    }
}

function showMessage(message, type) {
    const messageDiv = document.getElementById('message');
    messageDiv.className = `alert alert-${type}`;
    messageDiv.textContent = message;
    messageDiv.style.display = 'block';
    
    setTimeout(() => {
        messageDiv.style.display = 'none';
    }, 3000);
}

</script>
